var InteractionEventTypes={'InteractionEventTypeGesture':0,'InteractionEventTypeSpeech':1,'InteractionEventTypeCursor':2};var GestureTypes={'GestureTypeSwipe':0,'GestureTypeBody':1,'GestureTypeHold':2,'GestureTypeJointIntersection':3,'GestureTypeSpeech':4};var GestureDirections={'GestureDirectionLeft':0,'GestureDirectionRight':1,'GestureDirectionUp':2,'GestureDirectionDown':3,'GestureDirectionFront':4};var JointTypes={'JointTypeHandRight':0,'JointTypeWristRight':1,'JointTypeElbowRight':2,'JointTypeShoulderRight':3,'JointTypeShoulderCenter':4,'JointTypeShoulderLeft':5,'JointTypeElbowLeft':6,'JointTypeWristLeft':7,'JointTypeHandLeft':8,'JointTypeHead':9,'JointTypeSpine':10,'JointTypeHipCenter':11,'JointTypeFootRight':12,'JointTypeAnkelRight':13,'JointTypeKneeRight':14,'JointTypeFootRight':15,'JointTypeHipRight':16,'JointTypeHipLeft':17,'JointTypeKneeLeft':18,'JointTypeAnkleLeft':19,'JointTypeFootLeft':20};Function.prototype.inheritsFrom=function(a){if(a.constructor==Function){this.prototype=new a;this.prototype.constructor=this;this.prototype.parent=a.prototype}else{this.prototype=a;this.prototype.constructor=this;this.prototype.parent=a}return this};function GestureListener(){GestureListener.poll=function(){if(InteractionModel!=InteractionModelTypes.InteractionModelTypeKinect){return}};GestureListener.mouseMove=function(a){if(Kinesis.cursor!=null)Kinesis.cursor(a);cursor=document.getElementById('cursor');cursor.style.left=a.x-45+"px";cursor.style.top=a.y-45+"px";var b=document.elementFromPoint(a.x,a.y);if(b.className.search('interactive')!=-1){var c=b.parentNode;if((Kinesis.lastElement.length==0)||(Kinesis.lastElement[0]!=c)){if(Kinesis.lastElement.length!=0){Kinesis.lastElement[0].className=Kinesis.lastElement[0].className.replace(/(?:^|\s)active(?!\S)/,'');cursor.deactivateCursorTimer()}if(c.className.search('active')==-1)c.className+=" active";activateCursorTimer(cursor);Kinesis.lastElement.push(c);if(Kinesis.clickEventTimer){clearTimeout(Kinesis.clickEventTimer)};Kinesis.clickEventTimer=setTimeout(function(){c.className=c.className.replace(/(?:^|\s)active(?!\S)/,'');deactivateCursorTimer(cursor);$(c).trigger('click');setTimeout(function(){Kinesis.lastElement.pop(c)},Kinesis.holdEventDelay)},2000)}}else{if(Kinesis.clickEventTimer){Kinesis.lastElement.pop(c);clearTimeout(Kinesis.clickEventTimer);deactivateCursorTimer(cursor)}}}};function SwipeGestureListener(){SwipeGestureListener.prototype.gestureType=GestureTypes.GestureTypeSwipe,SwipeGestureListener.prototype.joints=[JointTypes.JointTypeHandRight,JointTypes.JointTypeHandLeft],SwipeGestureListener.prototype.directions=[GestureDirections.GestureDirectionLeft,GestureDirections.GestureDirectionRight,GestureDirections.GestureDirectionUp,GestureDirections.GestureDirectionDown];SwipeGestureListener.prototype.eventDelay=500;SwipeGestureListener.prototype.accuracy=null;SwipeGestureListener.prototype.bounds={min:null,max:null};SwipeGestureListener.prototype.toFire=null};SwipeGestureListener.inheritsFrom(GestureListener);function HoldGestureListener(){HoldGestureListener.prototype.gestureType=GestureTypes.GestureTypeHold,HoldGestureListener.prototype.joints=[JointTypes.JointTypeHandRight,JointTypes.JointTypeHandLeft],HoldGestureListener.prototype.directions=[GestureDirections.GestureDirectionLeft,GestureDirections.GestureDirectionRight,GestureDirections.GestureDirectionUp,GestureDirections.GestureDirectionDown];HoldGestureListener.prototype.eventDelay=500;HoldGestureListener.prototype.accuracy=null;HoldGestureListener.prototype.bounds={min:null,max:null};HoldGestureListener.prototype.toFire=null;HoldGestureListener.prototype.selector=null};HoldGestureListener.inheritsFrom(GestureListener);function Kinesis(){Kinesis.kinectStatus=false;Kinesis.gestureDetection=true;Kinesis.pollInterval=2000;Kinesis.gestures=[];Kinesis.cursor=null;Kinesis.lastElement=[];Kinesis.holdEventDelay=4000;Kinesis.clickEventTimer=null;Kinesis.prototype.keyword="KINESIS WINDOW ONE";Kinesis.prototype.is_series=false;Kinesis.prototype.is_parallel=true;Kinesis.prototype.streamCounter=0;Kinesis.prototype.canvas="#kinesis";this.initialize=function(a){if(Kinesis.gestureDetection==true&&a)this.matchGestures(a)};Kinesis.onStatusChange=function(a){console.info(a)};Kinesis.prototype.addGesture=function(a){Kinesis.gestures.push(a)};Kinesis.prototype.setStream=function(){};Kinesis.prototype.resetStream=function(){};Kinesis.prototype.matchGestures=function(a){if(a.gestures[0]!=undefined){eventType=a.gestures[0].type;joints=a.gestures[0].joints;direction=[a.gestures[0].direction];accuracy=a.gestures[0].accuracy;if(a.gestures[0].origin!=undefined){origin={};origin.x=a.gestures[0].origin.x;origin.y=a.gestures[0].origin.y;origin.z=a.gestures[0].origin.z}}if(a.cursor!=undefined){positionX=a.cursor.x;positionY=a.cursor.y;positionZ=a.cursor.z}for(index in Kinesis.gestures){gesture=Kinesis.gestures[index];if(checkBounds(origin,gesture.bounds)){console.info("in bounds");if(gesture.gestureType==eventType){console.info("gesture found");if((joints.intersect(gesture.joints)).length>0){console.info("allowable joint");if((direction.intersect(gesture.directions)).length>0){console.info("allowable direction");gesture.toFire(gesture);break}else{console.info("direction did not match");continue}}else{console.info("joints did not match");continue}}else{console.info("gesture type did not match");continue}}else{console.info("out of bounds");continue}}setKinesisTimer()}}function checkBounds(a,b){var c=true;if((b.min==null&&b.max==null))console.info("in bounds as no bounds specified");else{if(b.min==null||(b.min.x<=a.x&&b.min.y<=a.y&&b.min.z<=a.z))console.info("in min bounds");else{console.info("outside min bounds");c=false}if(b.max==null||(b.max.x>=a.x&&b.max.y>=a.y&&b.max.z>=a.z))console.info("in max bounds");else{console.info("outside max bounds");c=false}}return c};function setKinesisTimer(){console.info("timer off");Kinesis.gestureDetection=false;setTimeout("resetKinesisTimer()",Kinesis.pollInterval)};function resetKinesisTimer(){console.info("timer on");Kinesis.gestureDetection=true};Array.prototype.intersect=function(){if(!arguments.length)return[];var b=this;var a=a2=null;var n=0;while(n<arguments.length){a=[];a2=arguments[n];var l=b.length;var c=a2.length;for(var i=0;i<l;i++){for(var j=0;j<c;j++){if(b[i]===a2[j])a.push(b[i])}}b=a;n++}return a.unique()};Array.prototype.unique=function(){var a=[];var l=this.length;for(var i=0;i<l;i++){for(var j=i+1;j<l;j++){if(this[i]===this[j])j=++i}a.push(this[i])}return a};var cursorTimer=null;function activateCursorTimer(a){var b=a;var c=b.width/2;var d=b.height/2;var e=30;var f=-0.5*Math.PI;var g=f;var h=1.5*Math.PI;var i=false;var j=b.getContext("2d");j.shadowOffsetX=3;j.shadowOffsetY=3;j.shadowBlur=8;j.shadowColor='rgba(0, 0, 0, 0.5)';if(cursorTimer){clearInterval(cursorTimer)}cursorTimer=setInterval(function(){j.clearRect(0,0,100,100);if(g>h){g=f}else{g=g+(0.05*Math.PI)}j.beginPath();j.arc(c,d,e,f,g,i);j.lineWidth=8;j.strokeStyle='E5F3F9';j.stroke();j.closePath()},50);return a}function deactivateCursorTimer(a){if(cursorTimer){clearInterval(cursorTimer)}var b=a;var c=b.getContext("2d");c.clearRect(0,0,100,100);return a}function Layout(){Layout.pageSize={width:window.innerWidth,height:window.innerHeight}};function insertCursor(){var a=document.createElement('div');a.id='cursor';a.innerHTML='&nbsp;';document.body.appendChild(a)};var originalInit=window.onload;function init(){setTimeout(function(){insertCursor();myLayout=new Layout();kinect=Kinect();Kinect.prototype.init();if(originalInit)originalInit()},10)};var Kinect=function(){Kinect.prototype.init=function(){var c="MozWebSocket"in window?'MozWebSocket':("WebSocket"in window?'WebSocket':null);if(c==null){alert("Your browser cannot support WebSocket!");return}var d=new window[c]('ws://127.0.0.1:2011/sample');d.onmessage=function(a){try{var b=JSON.parse(a.data);if(b.Kinect!=undefined){if(b.Kinect=="Connected")Kinesis.kinectStatus=true;else Kinesis.kinectStatus=false;Kinesis.onStatusChange(b.Kinect)};if(b.cursor!=undefined){GestureListener.mouseMove({x:Layout.pageSize.width*b.cursor.x/100,y:Layout.pageSize.height*b.cursor.y*1.5/100,z:b.cursor.z})}kinesis.initialize(b)}catch(error){}};d.onopen=function(){console.info("Connection Opened")};d.onclose=function(){console.info("Connection Closed")}}};window.onload=init;